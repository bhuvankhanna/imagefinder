/*
 * MainMeny.java
 *
 * Created on January 7, 2008, 2:17 PM
 */

package cbirPack;
import CBIRDataLib.ImageEntry;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileOutputStream;
import java.io.ObjectOutputStream;
import java.util.Random;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;


public class ManageImageQueryDatabase extends javax.swing.JFrame {
    MainMenu parent;
    
    DefaultListModel lm;
    BufferedImage tiNewImage, tiNewSign, tiSelectedImage, tiSelectedSign;
    Graphics2D gNewImage, gNewSign, gSelectedImage, gSelectedSign;
    ImageIcon iiNewImage, iiNewSign, iiSelectedImage, iiSelectedSign;
    
    // new image width, height
    int nw, nh;
    int rSign[][], gSign[][], bSign[][], gsSign[][];
    int dominant;
    
    boolean imageLoaded;
    
    /** Creates new form MainMeny */
    public ManageImageQueryDatabase(MainMenu parent) {
        this.parent = parent;
        
        initComponents();
        Dimension sd  = Toolkit.getDefaultToolkit().getScreenSize();
        setLocation(sd.width / 2 - this.getWidth()/ 2, sd.height / 2 - this.getHeight()/ 2);
        
        rSign = new int[10][10];
        gSign = new int[10][10];
        bSign = new int[10][10];
        gsSign = new int[10][10];
        
        loadDB();
        
        imageLoaded = false;
    }
    
    public void loadDB() {
        lm = new DefaultListModel();
        
        for(int i=0;i<parent.imageDB.db.size();i++) {
            String fname = parent.imageDB.db.get(i).imageFileName;
            lm.addElement(fname);
        }
        jListDB.setModel(lm);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListDB = new javax.swing.JList();
        jButton2 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jLabelSelectedImage = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabelSelectedSignature = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jLabelNewImage = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabelNewSignature = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CBIR - IMAGE SIGNATURE REGISTRATION");
        jLabel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Current Database"));

        jListDB.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jListDB.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListDB.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListDBValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jListDB);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11));
        jButton2.setForeground(new java.awt.Color(102, 0, 102));
        jButton2.setText("R E M O V E");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTabbedPane1.setBackground(new java.awt.Color(51, 51, 51));
        jTabbedPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelSelectedImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jScrollPane3.setViewportView(jLabelSelectedImage);

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Image", jPanel4);

        jLabelSelectedSignature.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelSelectedSignature.setIcon(new javax.swing.ImageIcon(getClass().getResource("/zImagePack/Back100x100.PNG"))); // NOI18N
        jLabelSelectedSignature.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        org.jdesktop.layout.GroupLayout jPanel5Layout = new org.jdesktop.layout.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabelSelectedSignature, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabelSelectedSignature, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Signature", jPanel5);

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jButton2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 318, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton2)))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Add Image To Database"));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11));
        jButton1.setForeground(new java.awt.Color(0, 51, 102));
        jButton1.setText("B A C K");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 11));
        jButton4.setForeground(new java.awt.Color(102, 0, 102));
        jButton4.setText("L O A D    N E W    I M A G E");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 11));
        jButton5.setForeground(new java.awt.Color(102, 0, 102));
        jButton5.setText("A D D    T O    D A T A B A S E");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jTabbedPane2.setBackground(new java.awt.Color(51, 51, 51));
        jTabbedPane2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelNewImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jScrollPane2.setViewportView(jLabelNewImage);

        org.jdesktop.layout.GroupLayout jPanel6Layout = new org.jdesktop.layout.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Image", jPanel6);

        jLabelNewSignature.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelNewSignature.setIcon(new javax.swing.ImageIcon(getClass().getResource("/zImagePack/Back100x100.PNG"))); // NOI18N
        jLabelNewSignature.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        org.jdesktop.layout.GroupLayout jPanel7Layout = new org.jdesktop.layout.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabelNewSignature, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabelNewSignature, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Signature", jPanel7);

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jTabbedPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 542, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel2Layout.createSequentialGroup()
                        .add(jButton4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 192, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton5)
                        .add(29, 29, 29)
                        .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 130, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jTabbedPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 245, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jButton5)
                    .add(jButton1))
                .addContainerGap())
        );

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 578, Short.MAX_VALUE)
                    .add(jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 31, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
// TODO add your handling code here:
        add2Database();
    }//GEN-LAST:event_jButton5ActionPerformed

    public void add2Database() {
        if(!imageLoaded) {
            new MessageBox(this,"Load A New Image First!").setVisible(true);
            return;
        }
        
        Random r = new Random();
        String fname = "";
        for(int i=0;i<12;i++) {
            fname = fname + (char)(Math.abs(r.nextInt()%10) + 48);
        }
        fname = fname + ".PNG";
        
        String fullName = System.getProperty("user.dir") + "\\ImageQueryDB\\" + fname;
        
        try {
            System.gc();
            ImageIO.write(tiNewImage,"png",new File(fullName));
            
            ImageEntry imageEntry = new ImageEntry();
            imageEntry.imageFileName = fname;
            for(int y=0;y<10;y++) {
                for(int x=0;x<10;x++) {
                    imageEntry.signR[y][x] = rSign[y][x];
                    imageEntry.signG[y][x] = gSign[y][x];
                    imageEntry.signB[y][x] = bSign[y][x];
                    imageEntry.signGS[y][x] = gsSign[y][x];
                }
            }
            imageEntry.dominantCol = dominant;
            parent.imageDB.db.add(imageEntry);
            
            parent.writeToFile();
            loadDB();
            new MessageBox(this,"IMAGE: " + fname + " ADDED TO DATABASE!").setVisible(true);
        }catch(Exception e) {
            System.out.println("Error Creating Image: " + e);
        }
        imageLoaded = false;        
    }
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
// TODO add your handling code here:
        try
        {
            System.gc();
            FileDialog fd = new FileDialog(this,"Load From",FileDialog.LOAD);
            fd.setVisible(true);
            if(fd.getFile()==null) {
                return;
            }
            
            String fname = fd.getDirectory() + fd.getFile();
            Image image = Toolkit.getDefaultToolkit().getImage(fname);
            MediaTracker mediaTracker = new MediaTracker(new Container());
            mediaTracker.addImage(image, 0);
            mediaTracker.waitForID(0);
            
            nw = image.getWidth(null);
            nh = image.getHeight(null);
            
            tiNewImage = new BufferedImage(nw, nh, BufferedImage.TYPE_INT_RGB);
            gNewImage = tiNewImage.createGraphics();
            gNewImage.drawImage(image, 0, 0, nw, nh, null);
            iiNewImage = new ImageIcon(tiNewImage);
            jLabelNewImage.setIcon(iiNewImage);
            
            tiNewSign = new BufferedImage(100, 100, BufferedImage.TYPE_INT_RGB);
            gNewSign = tiNewSign.createGraphics();
            
            int yDiv = nh/10;
            int xDiv = nw/10;
            int col, r, g, b, gs;
            long rSum, gSum, bSum, gsSum;
            long rDom, gDom, bDom, maxDom;
            
            rDom = gDom = bDom = 0;
            for(int y=0;y<10;y++) {
                for(int x=0;x<10;x++) {
                    rSum = gSum = bSum = gsSum = 0;
                    for(int yy=y*yDiv;yy<(y+1)*yDiv;yy++) {
                        for(int xx=x*xDiv;xx<(x+1)*xDiv;xx++) {
                            col = tiNewImage.getRGB(xx,yy);
                            r = (col >> 16) & 0xff;
                            g = (col >> 8) & 0xff;
                            b = (col >> 0) & 0xff;
                            gs = (int)(r*0.33 + g*0.56 + b*0.11);
                            rSum += r;
                            gSum += g;
                            bSum += b;
                            gsSum += gs;
                        }
                    }
                    r = (int)(rSum/(yDiv*xDiv));
                    g = (int)(gSum/(yDiv*xDiv));
                    b = (int)(bSum/(yDiv*xDiv));
                    gs = (int)(gsSum/(yDiv*xDiv));
                    
                    rSign[y][x] = r;
                    gSign[y][x] = g;
                    bSign[y][x] = b;
                    gsSign[y][x] = gs;
                    
                    rDom += r;
                    gDom += g;
                    bDom += b;
                    
                    gNewSign.setColor(new Color(r,g,b));
                    gNewSign.fillRect(x*10,y*10,10,10);
                }
            }
            iiNewSign = new ImageIcon(tiNewSign);
            jLabelNewSignature.setIcon(iiNewSign);
            
            maxDom = Math.max(rDom,Math.max(gDom,bDom));
            if(maxDom==rDom) {
                dominant = 1; // red
            }else if(maxDom==gDom) {
                dominant = 2;
            }else if(maxDom==bDom) {
                dominant = 3;
            }
            
            imageLoaded = true;
            
            // temp 
//            add2Database();
            
        }catch(Exception e) {
            System.out.println("Exception Loading Image: " + e);
            e.printStackTrace();
            imageLoaded = false;
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
// TODO add your handling code here:
        int index;
        index = jListDB.getSelectedIndex();
        if(index!=-1) {
            String fname = System.getProperty("user.dir") + "\\ImageQueryDB\\" + parent.imageDB.db.get(index).imageFileName;
            try {
                new File(fname).delete();
                lm.remove(index);
                parent.imageDB.db.remove(index);
                parent.writeToFile();
                loadDB();
                new MessageBox(this,"Image Removed From Database!").setVisible(true);
            }catch(Exception e) {
                System.out.println("Error Deleting Image: " + e);
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jListDBValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListDBValueChanged
// TODO add your handling code here:
        int index;
        // selected width height
        int sw, sh;
        
        index = jListDB.getSelectedIndex();
        if(index!=-1) {
            String fname = System.getProperty("user.dir") + "\\ImageQueryDB\\" + parent.imageDB.db.get(index).imageFileName;
            try
            {
                Image image = Toolkit.getDefaultToolkit().getImage(fname);
                MediaTracker mediaTracker = new MediaTracker(new Container());
                mediaTracker.addImage(image, 0);
                mediaTracker.waitForID(0);
                sw = image.getWidth(null);
                sh = image.getHeight(null);
                tiSelectedImage = new BufferedImage(sw,sh,BufferedImage.TYPE_INT_RGB);
                gSelectedImage = tiSelectedImage.createGraphics();
                gSelectedImage.drawImage(image, 0, 0, sw, sh, null);
                ImageIcon iiSelectedImage = new ImageIcon(tiSelectedImage);
                jLabelSelectedImage.setIcon(iiSelectedImage);
                
                tiSelectedSign = new BufferedImage(100,100,BufferedImage.TYPE_INT_RGB);
                gSelectedSign = tiSelectedSign.createGraphics();
                int r, g, b;
                for(int y=0;y<10;y++) {
                    for(int x=0;x<10;x++) {
                        r = parent.imageDB.db.get(index).signR[y][x];
                        g = parent.imageDB.db.get(index).signG[y][x];
                        b = parent.imageDB.db.get(index).signB[y][x];
                        
                        gSelectedSign.setColor(new Color(r,g,b));
                        gSelectedSign.fillRect(x*10,y*10,10,10);
                    }
                }
                ImageIcon iiSelectedSign = new ImageIcon(tiSelectedSign);
                jLabelSelectedSignature.setIcon(iiSelectedSign);
                System.out.println("Dominant: " + parent.imageDB.db.get(index).dominantCol);
           }catch(Exception e) {
                System.out.println("Exception : " + e);
           }
        }
        
    }//GEN-LAST:event_jListDBValueChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here:
        setVisible(false);
        parent.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelNewImage;
    private javax.swing.JLabel jLabelNewSignature;
    private javax.swing.JLabel jLabelSelectedImage;
    private javax.swing.JLabel jLabelSelectedSignature;
    private javax.swing.JList jListDB;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    // End of variables declaration//GEN-END:variables
    
}
